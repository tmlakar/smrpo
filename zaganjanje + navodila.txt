Scrumly aplikacija

________________________________________________

1. v root directory ustvari fajl .env in vanj shrani
JWT_GESLO=toleNašeGeslo


Navodila za zagon:
$ cd smrpo
$ npm install
$ npm install -g nodemon
$ nodemon



(ce pri kaksnem ukazu vrze error, das pred ukaz sudo, in zahteva tvoje uporabniskovo geslo (administrator pravice))

(za bootstrap)
$ sudo npm install bootstrap

Aplikacijo odpremo v brskalniku na naslovu:
localhost:3000



__________________________________________________

podatkovna baza MongoDB

-> lokalna vzpostavitev na računalniku:
download:
- Windows: https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/
- MacOS: https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/

__________________________________________________

zagon lokalne podatkovne baze MongoDB

- - - - - - - - - - - - - - - - 

MACOS zagon podatkovne baze:
-> MacOS zagon podatkovne baze v terminalu:
$ brew services start mongodb-community

-> MacOS preverjanje zagona:
$ brew services list
(Name              Status  User   File
mongodb-community started tjasam ~/Library/LaunchAgents/homebrew.mxcl.mongodb-community.plist)

-> MacOS from a new terminal (zagon shella):
$ mongosh
(od tu lahko dodajamo rocno v podatkovno bazo:

> show dbs
> use mongodb-community (ime nase baze)
> show collections (prikaz kolekcij oziroma zbirk)
> db.Users.insertOne({}) ... (dodajanje novega zapisa)

V podatkovno bazo lahko posredujemo poizvedbo db.Users.find(), ki nam vrne vse dokumente, ki so shranjeni v zbirki Users.
Namig: Za brisanje vseh zapisov iz zbirke (npr. iz Users) lahko uporabimo ukaz db.Users.remove({}), 
če pa želimo zbirko v celoti odstraniti (npr. Users), potem uporabimo ukaz db.Users.drop().
(vec v lavbi zbirki)


(-> MacOS zaustavitev:
$ brew services stop mongodb-community)

- - - - - - - - - - - - - - - - - - - - 

Windows zagon podatkovne baze:
-> v novem terminalu:
mongosh

(ostali ukazi so enaki kot pri MacOS, če se kaj razlikuje prosim dopišite)

_______________________________________________________

-> uvazanje zacetnih podatkov v lokalno podatkovno bazo:
1. moznost: iz ukazne vrstice:
Users: mongoimport app_server/models/user.json -d mongodb-community --jsonArray -c Users
Admins: mongoimport app_server/models/admin.json -d mongodb-community --jsonArray -c Admins


2. moznost: iz ukazne vrstice uporabi ukaza za izvajanje skript iz package.json:
	1. npm run-script uporabniki-uvoz

_______________________________________________________

REST API za dostop do MongoDB podatkovne baze
-> omogoca interakcijo s podatkovno bazo s pomocjo HTTP zahtev
-> izvaja standardne CRUD operacije

-> dostopanje na localhost:3000/api/... za preverjanje delovanja GET metod

Primeri za testiranje s CURL za pravilno delovanje rest api metod (bili potrebni samo za preverjanje):
-> CURL POST:
	curl -X POST \
       -d "name=Helena&surname=Blagne&username=helenabg&email=helena@blagne.si&role=user" \
       -H "Content-Type: application/x-www-form-urlencoded" \
       http://localhost:3000/api/user-new

// registracija zeton
curl -X POST \
       -d "name=Neli&surname=Potokar&username=nelip&email=neli@helena.si&password=testtesttest1&role=admin&accessToken=xxxx" \
       -H "Content-Type: application/x-www-form-urlencoded" \
       http://localhost:3000/api/registracija

//avtentikacija prijava
curl -X POST \
       -d "username=tjasamlakar1&password=test1" \
       -H "Content-Type: application/x-www-form-urlencoded" \
       http://localhost:3000/api/prijava	   

-> CURL PUT:
	curl -X PUT \
		-d "name=Neli&surname=Blagne&username=helenabg&email=helena@blagne.si&role=user" \
		-H "Content-Type: application/x-www-form-urlencoded" \
		"http://localhost:3000/api/users/622b3f756e765042fa49227f"

// posodobitev
	curl -X PUT \
		-d "name=This one was updated" \
		-H "Content-Type: application/x-www-form-urlencoded" \
		"http://localhost:3000/api/projects/62346721332caaac0e351133"

-> CURL DELETE:
	curl -X DELETE \
		"http://localhost:3000/api/users/622c5e83c89db7682bcee73e"

curl -X POST \
       -d "name=Building a wall - how to" \
       -H "Content-Type: application/x-www-form-urlencoded" \
       http://localhost:3000/api/project-new


curl -X PUT \
       -d "name=Helena&surname=BlagneKosar&username=blagneh&email=helenb@helena.si” \
       -H "Content-Type: application/x-www-form-urlencoded" \
       "http://localhost:3000/api/account/623308b6ac0417e865ad0a6e"
_______________________________________________________


Razdelitev po mapah (kje je kaj?):

app_server - streznik
	controllers (nadzirajo, kaksna vsebina se prikazuje pri posameznih zaslonskih maskah -> views)
	models (modeli podatkovnih struktur oziroma .json fajli podatkov)
	routes (povezave med controllerji, views in models)
	views (zaslonske maske)


app_api - komuniciranje streznika s podatkovno bazo prek REST APIja
	controllers
	models
	routes


public - src za vse javascript in stylesheets datoteke + slike itd.

